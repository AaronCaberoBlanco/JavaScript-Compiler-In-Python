Y -> P {TSG:= CreaTS()
        TSactual:= TSG
        DespG:= 0
        ZonaDecl:= true}
P -> B P {}
P -> F P {}
P -> lambda {}
B -> if ( E ) S {if E.tipo != log
                    then Error(1)
                 }
B -> let T id ; {if estaEnTS(id)
                    then Error(2)
                else
                    añadirTipoTS(id,T.tipo)
                    añadirDespTS(id,desp)
                    desp += T.ancho
                }
B -> S {}
B -> for ( D ; E ; Z ) { C } { if E.tipo != log
                                    then Error(3)
S -> id = E ;
S -> id ( L ) ;
S -> alert ( E ) ;
S -> input ( id ) ;
S -> return X ;
T -> number
T -> boolean
T -> string
F -> F1 F2 F3
F1 -> function H id
F2 -> ( A )
F3 -> { C }
E -> E && R
E -> R
R -> R == U
R -> U
U -> U - V
U -> V
V -> -- id
V -> id
V -> ( E )
V -> id ( L )
V -> ent
V -> cad
V -> log
X -> E
X -> lambda
L -> E Q
L -> lambda
Q -> , E Q
Q -> lambda
D -> id = E
D -> lambda
Z -> id = E
Z -> -- id
Z -> lambda
H -> T
H -> lambda
A -> T id K
A -> lambda
K -> , T id K
K -> lambda
C -> B C
C -> lambda